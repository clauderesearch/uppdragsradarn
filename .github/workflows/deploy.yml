name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE_NAME: clauderesearch/uppdragsradarn-backend
  FRONTEND_IMAGE_NAME: clauderesearch/uppdragsradarn-frontend
  ADMIN_IMAGE_NAME: clauderesearch/uppdragsradarn-admin

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Build description-parser module
      run: |
        cd description-parser
        ../mvnw clean install -DskipTests -B
        
    - name: Build backend
      run: |
        cd backend
        ./mvnw clean package -DskipTests -B
        
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        export NUXT_PUBLIC_API_BASE="https://jahziah.com/api"
        export NUXT_PUBLIC_COGNITO_REGION="eu-north-1"
        export NUXT_PUBLIC_COGNITO_USER_POOL_ID="eu-north-1_34ZSxWwnh"
        export NUXT_PUBLIC_COGNITO_CLIENT_ID="54a09pb5vcgecj3m8h0bfch8a1"
        export NUXT_PUBLIC_COGNITO_DOMAIN="uppdragsradarn.auth.eu-north-1.amazoncognito.com"
        npm run generate
        
    - name: Build admin
      run: |
        cd admin
        npm ci
        export NUXT_PUBLIC_API_BASE="https://jahziah.com/api"
        export NUXT_PUBLIC_COGNITO_REGION="eu-north-1"
        export NUXT_PUBLIC_COGNITO_USER_POOL_ID="eu-north-1_34ZSxWwnh"
        export NUXT_PUBLIC_COGNITO_CLIENT_ID="54a09pb5vcgecj3m8h0bfch8a1"
        export NUXT_PUBLIC_COGNITO_DOMAIN="uppdragsradarn.auth.eu-north-1.amazoncognito.com"
        npm run generate
        
    - name: Deploy frontend to Spaces
      run: |
        # Install s3cmd
        sudo apt-get update && sudo apt-get install -y s3cmd
        
        # Configure s3cmd for DigitalOcean Spaces
        cat > ~/.s3cfg << EOF
        [default]
        host_base = ams3.digitaloceanspaces.com
        host_bucket = %(bucket)s.ams3.digitaloceanspaces.com
        access_key = ${{ secrets.DIGITALOCEAN_SPACES_KEY }}
        secret_key = ${{ secrets.DIGITALOCEAN_SPACES_SECRET }}
        use_https = True
        EOF
        
        # Create buckets and sync
        s3cmd mb s3://uppdragsradarn-frontend-prod --region=ams3 || true
        s3cmd mb s3://uppdragsradarn-admin-prod --region=ams3 || true
        
        s3cmd sync frontend/.output/public/ s3://uppdragsradarn-frontend-prod/ --delete-removed --acl-public
        s3cmd sync admin/.output/public/ s3://uppdragsradarn-admin-prod/ --delete-removed --acl-public
        
        # Set proper MIME types for common files
        s3cmd modify s3://uppdragsradarn-frontend-prod/index.html --add-header="Content-Type:text/html"
        s3cmd modify s3://uppdragsradarn-admin-prod/index.html --add-header="Content-Type:text/html"
        
    - name: Build backend Docker image  
      run: |
        cd backend
        docker build -t backend:latest .
        echo "Backend image built successfully"
        
    - name: Deploy summary
      run: |
        echo "ðŸš€ Deployment Complete!"
        echo "ðŸ“¦ Frontend deployed to: https://uppdragsradarn-frontend-prod.ams3.digitaloceanspaces.com"
        echo "ðŸ“¦ Admin deployed to: https://uppdragsradarn-admin-prod.ams3.digitaloceanspaces.com"
        echo "âœ… Phase 1 Delivery - Frontend static sites are now live!"
        echo ""
        echo "Next steps for backend deployment:"
        echo "1. Create Docker Hub account or registry"
        echo "2. Deploy backend to Kubernetes cluster"
        echo "3. Configure ingress and SSL certificates"
        
