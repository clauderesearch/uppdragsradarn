name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: uppdragsradarn-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build backend
      run: |
        cd backend
        ./mvnw clean package -DskipTests -B
        
    - name: Build and push backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        export NUXT_PUBLIC_API_BASE="https://jahziah.com/api"
        export NUXT_PUBLIC_COGNITO_REGION="eu-north-1"
        export NUXT_PUBLIC_COGNITO_USER_POOL_ID="eu-north-1_34ZSxWwnh"
        export NUXT_PUBLIC_COGNITO_CLIENT_ID="54a09pb5vcgecj3m8h0bfch8a1"
        export NUXT_PUBLIC_COGNITO_DOMAIN="uppdragsradarn.auth.eu-north-1.amazoncognito.com"
        npm run generate
        
    - name: Build admin
      run: |
        cd admin
        npm ci
        export NUXT_PUBLIC_API_BASE="https://jahziah.com/api"
        export NUXT_PUBLIC_COGNITO_REGION="eu-north-1"
        export NUXT_PUBLIC_COGNITO_USER_POOL_ID="eu-north-1_34ZSxWwnh"
        export NUXT_PUBLIC_COGNITO_CLIENT_ID="54a09pb5vcgecj3m8h0bfch8a1"
        export NUXT_PUBLIC_COGNITO_DOMAIN="uppdragsradarn.auth.eu-north-1.amazoncognito.com"
        npm run generate
        
    - name: Deploy frontend to Spaces
      run: |
        # Install s3cmd
        sudo apt-get update && sudo apt-get install -y s3cmd
        
        # Configure s3cmd for DigitalOcean Spaces
        cat > ~/.s3cfg << EOF
        [default]
        host_base = ams3.digitaloceanspaces.com
        host_bucket = %(bucket)s.ams3.digitaloceanspaces.com
        access_key = ${{ secrets.DIGITALOCEAN_SPACES_KEY }}
        secret_key = ${{ secrets.DIGITALOCEAN_SPACES_SECRET }}
        use_https = True
        EOF
        
        # Create buckets and sync
        s3cmd mb s3://uppdragsradarn-frontend-prod --region=ams3 || true
        s3cmd mb s3://uppdragsradarn-admin-prod --region=ams3 || true
        
        s3cmd sync frontend/.output/public/ s3://uppdragsradarn-frontend-prod/ --delete-removed --acl-public
        s3cmd sync admin/.output/public/ s3://uppdragsradarn-admin-prod/ --delete-removed --acl-public
        
    - name: Deploy to Kubernetes
      run: |
        doctl kubernetes cluster kubeconfig save ${{ secrets.KUBERNETES_CLUSTER_ID }}
        
        # Update backend deployment with real Spring Boot image
        kubectl set image deployment/backend -n uppdragsradarn \
          backend=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE_NAME }}:latest || \
          echo "Backend deployment will be created"
          
        # Wait for rollout if deployment exists
        kubectl rollout status deployment/backend -n uppdragsradarn --timeout=300s || \
          echo "Backend not ready yet"