# Default server - catches all requests that don't match
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;
    
    # SSL Certificate for default server
    ssl_certificate /etc/nginx/certs/dev.uppdragsradarn.se.crt;
    ssl_certificate_key /etc/nginx/certs/dev.uppdragsradarn.se.key;
    
    return 404;
}

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name dev.uppdragsradarn.se www.dev.uppdragsradarn.se;
    return 301 https://$host$request_uri;
}

# Single domain configuration - all apps on dev.uppdragsradarn.se
server {
    listen 443 ssl http2;
    server_name dev.uppdragsradarn.se www.dev.uppdragsradarn.se;

    ssl_certificate /etc/nginx/certs/dev.uppdragsradarn.se.crt;
    ssl_certificate_key /etc/nginx/certs/dev.uppdragsradarn.se.key;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # API routes - all /api/* requests go to backend
    location /api {
        proxy_pass http://host.docker.internal:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port 443;
    }

    # OAuth2 and login routes - handled by Spring Security
    location ~ ^/(oauth2|login) {
        proxy_pass http://host.docker.internal:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port 443;
    }

    # Admin app - all /admin/* requests go to admin frontend
    location /admin {
        # Don't strip the prefix - Nuxt is configured to expect it
        proxy_pass http://host.docker.internal:3001/admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        # WebSocket support for Vite HMR
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Redis port forwarding
    location ~* /redis$ {
        internal;  # Not accessible from outside
        proxy_pass http://host.docker.internal:6379;
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }

    # Main frontend - everything else
    location / {
        proxy_pass http://host.docker.internal:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        # WebSocket support for Vite HMR
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
}